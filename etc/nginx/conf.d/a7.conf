# ----------------------------------------------------------------------
# | A7 server                                                          |
# ----------------------------------------------------------------------

# Include Javascript functions in the njs scripting language
# See: https://nginx.org/en/docs/njs/
#
js_import edge/a7.js;

# Volume mount path used to access the assets root directory
js_set $mount_path a7.mountPathFromEnv;

# Prepare the on-the-fly compression server
include includes/zip_directories_server.conf;

server {
  listen [::]:45537 default_server deferred;
  listen 45537 default_server deferred;

  server_name _;

  root $mount_path;

  # Disable cookies
  include includes/disable_cookies.conf;

  # Skip favicon.ico
  include includes/skip_favicon.conf;

  ## if-env A7_GET_REQUESTS_ONLY
  # Restrict the use of HTTP methods
  include includes/restrict_http_methods.conf;
  ##/if-env A7_GET_REQUESTS_ONLY

  # Ensure that redirections provide relative locations
  include includes/relative_redirects.conf;

  ## if-env A7_AUTOINDEX_CORS_ALL
  include includes/catalog_queries_cors_all.conf;
  ##/if-env A7_AUTOINDEX_CORS_ALL

  ## if-env A7_AUTOINDEX
  # Browsable pages: list assets when in a directory
  include includes/browse_directories.conf;

  # Searchable files
  include includes/search.conf;

  # Handle ?catalog queries
  include includes/catalog_queries.conf;
  ##/if-env A7_AUTOINDEX

  ## if-env A7_ZIP_DIRECTORIES
  # Handle on-the-fly directory compression.
  include includes/zip_directories.conf;
  ##/if-env A7_ZIP_DIRECTORIES

  # health check
  location /_health {
    # Invalidate cache headers
    #
    add_header Cache-Control "";
    add_header Cache-Tag "";

    return 200;
  }

  location /a7 {
    internal;
    root /usr/share/nginx/html;
  }

  # Custom 404 error page
  # Also make sure to disguise any server-related (NJS) issue as a 404
  #
  error_page 404 = /404.html;
  location /404.html {
    # internal;
    root /usr/share/nginx/html;

    # Invalidate cache headers
    #
    add_header Cache-Control "";
    add_header Cache-Tag "";

    add_before_body /a7_browse_body.html;
    add_after_body /a7_browse_directory.html;

    return 404; # TODO: why does it override the HTML page response?
  }
  rewrite ^\/404$ /404.html last;

  ## if-env A7_META_QUERIES_CORS_ALL
  # Handle ?meta queries
  include includes/meta_queries_cors_all.conf;
  ##/if-env A7_META_QUERIES_CORS_ALL

  ## if-env A7_META_QUERIES
  # Handle ?meta queries
  include includes/meta_queries.conf;
  ##/if-env A7_META_QUERIES

  # Files configuration
  #
  add_header Cache-Control
    "public, immutable"; # 1 year by default, set in includes/cache_expiration.conf
  add_header Cache-Tag "asset";

  ## if-env A7_CORS_ALL
  # Handle CORS
  include includes/cors.conf;
  ##/if-env A7_CORS_ALL

  # Serve files, directories
  # If the asset exists, it is served
  # If not, let's find it anyway
  #
  try_files $uri @a7expand;

  location @a7expand {
    try_files $uri $uri/; # prevent 301 redirection in directories
    # Invalidate cache headers, as redirections will likely occur
    #
    add_header Cache-Control "";
    add_header Cache-Tag "";

    ## if-env A7_PATH_AUTO_EXPAND
    # Go expand the current requested URI into something actually on the server
    #
    js_content a7.expand;
    ##/if-env A7_PATH_AUTO_EXPAND
  }
}
